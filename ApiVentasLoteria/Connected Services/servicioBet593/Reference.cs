//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace servicioBet593
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="servicioBet593.IServicio")]
    public interface IServicio
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/fnAutenticacionALT", ReplyAction="http://tempuri.org/IServicio/fnAutenticacionALTResponse")]
        string fnAutenticacionALT(string PI_DatosXml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/fnAutenticacionALT", ReplyAction="http://tempuri.org/IServicio/fnAutenticacionALTResponse")]
        System.Threading.Tasks.Task<string> fnAutenticacionALTAsync(string PI_DatosXml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/fnEjecutaTransaccionALT", ReplyAction="http://tempuri.org/IServicio/fnEjecutaTransaccionALTResponse")]
        string fnEjecutaTransaccionALT(string PI_DatosXml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/fnEjecutaTransaccionALT", ReplyAction="http://tempuri.org/IServicio/fnEjecutaTransaccionALTResponse")]
        System.Threading.Tasks.Task<string> fnEjecutaTransaccionALTAsync(string PI_DatosXml);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    public interface IServicioChannel : servicioBet593.IServicio, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    public partial class ServicioClient : System.ServiceModel.ClientBase<servicioBet593.IServicio>, servicioBet593.IServicio
    {
        
        /// <summary>
        /// Implemente este método parcial para configurar el punto de conexión de servicio.
        /// </summary>
        /// <param name="serviceEndpoint">El punto de conexión para configurar</param>
        /// <param name="clientCredentials">Credenciales de cliente</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public ServicioClient() : 
                base(ServicioClient.GetDefaultBinding(), ServicioClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IServicio.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServicioClient(EndpointConfiguration endpointConfiguration) : 
                base(ServicioClient.GetBindingForEndpoint(endpointConfiguration), ServicioClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServicioClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(ServicioClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServicioClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(ServicioClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServicioClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public string fnAutenticacionALT(string PI_DatosXml)
        {
            return base.Channel.fnAutenticacionALT(PI_DatosXml);
        }
        
        public System.Threading.Tasks.Task<string> fnAutenticacionALTAsync(string PI_DatosXml)
        {
            return base.Channel.fnAutenticacionALTAsync(PI_DatosXml);
        }
        
        public string fnEjecutaTransaccionALT(string PI_DatosXml)
        {
            return base.Channel.fnEjecutaTransaccionALT(PI_DatosXml);
        }
        
        public System.Threading.Tasks.Task<string> fnEjecutaTransaccionALTAsync(string PI_DatosXml)
        {
            return base.Channel.fnEjecutaTransaccionALTAsync(PI_DatosXml);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IServicio))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("No se pudo encontrar un punto de conexión con el nombre \"{0}\".", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IServicio))
            {
                return new System.ServiceModel.EndpointAddress("http://200.24.198.70/WCFALT_PREP/Servicio.svc");
            }
            throw new System.InvalidOperationException(string.Format("No se pudo encontrar un punto de conexión con el nombre \"{0}\".", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return ServicioClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IServicio);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return ServicioClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IServicio);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IServicio,
        }
    }
}
